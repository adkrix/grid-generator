/**
 *  GRID GENERATOR
 *
 *  Usage:
 *    @include grid-generator(16,20px,'mycol','myrow')
 *
 *  Generating of 16-column grid with 20px-gutter
 *
 *  ROW: .myrow{...}
 *  COLUMNS: .mycol-1{...} ... .mycol-16{...}
 *  OFFSETS: .mycol-offset-1{...} ... .mycol-offset-16{...}
 *  PULLS: .mycol-pull-0{...} ... .mycol-pull-16{...}
 *  PUSHS: .mycol-push-0{...} ... .mycol-push-16{...}
 *
 *  @author: arthur.creek@gmail.com
 *
 */

@mixin grid-generator($cols: 12, $gutter: 30px, $col-name: 'col', $row-name: 'row', $min-width: 0)

  @if unitless($gutter)
    $gutter: $gutter * 1px
  @if unitless($min-width)
    $min-width: $min-width * 1px

  // row container
  @if $row-name != ''
    .#{$row-name}
      margin-left: ($gutter / -2)
      margin-right: ($gutter / -2)
      &:before,&:after
        content: " "
        display: table
      &:after
        clear: both

  $columnList: ".#{$col-name}-1"
  @for $i from 2 through $cols
    $columnList: "#{$columnList}, .#{$col-name}-#{$i}"

  #{$columnList}
    position: relative
    min-height: 1px
    padding-left: ($gutter / 2)
    padding-right: ($gutter / 2)

  @if $min-width == 0
    @include grid-generator-helper($cols, $col-name)
  @else
    @media (min-width: $min-width)
      @include grid-generator-helper($cols, $col-name)


@mixin grid-generator-helper($cols, $col-name)
  // FLOATING
  $columnList: ".#{$col-name}-1"
  @for $i from 2 through $cols
    $columnList: "#{$columnList}, .#{$col-name}-#{$i}"

  #{$columnList}
    float: left

  // WIDTH of columns
  @for $i from 1 through $cols
    $columnName: ".#{$col-name}-#{$i}"
    #{$columnName}
      width: (100% / $cols * $i)

  // OFFSET
  $offsetName: ".#{$col-name}-offset-0"
  #{$offsetName}
    margin-left: 0

  @for $i from 1 through $cols
    $offsetName: ".#{$col-name}-offset-#{$i}"
    #{$offsetName}
      margin-left: (100% / $cols * $i)

  // PUSH
  $pushName: ".#{$col-name}-push-0"
  #{$pushName}
    left: 0

  @for $i from 1 through $cols
    $pushName: ".#{$col-name}-push-#{$i}"
    #{$pushName}
      left: (100% / $cols * $i)

  // PULL
  $pullName: ".#{$col-name}-pull-0"
  #{$pullName}
    right: 0

  @for $i from 1 through $cols
    $pullName: ".#{$col-name}-pull-#{$i}"
    #{$pullName}
      right: (100% / $cols * $i)


/**
 *  RESPONSIVE GRID GENERATOR (BOOTSTRAP STYLE)
 *
 *  Limits 768px / 992px / 1200px
 *
 *  standard bootstrap-3 grid
 *
 *    .grid-generator-responsive();
 *
 *  16-column bootstrap-3 grid with 20px gutter
 *
 *    .grid-generator-responsive(16, 20px);
 */
@mixin grid-generator-responsive($cols: 12, $gutter: 30px, $col-name: 'col', $row-name: 'row')
  // XS
  @include grid-generator($cols, $gutter, "#{$col-name}-xs", $row-name)

  // SM
  @include grid-generator($cols, $gutter, "#{$col-name}-sm", '', 768px)

  // MD
  @include grid-generator($cols, $gutter, "#{$col-name}-md", '', 992px)

  // LG
  @include grid-generator($cols, $gutter, "#{$col-name}-lg", '', 1200px)


/**
 *  MOBILE GRID GENERATOR (BOOTSTRAP STYLE)
 *  with added mobile grid less then 480px
 *
 *  Limits 480px / 768px / 992px / 1200px
 *
 *  standard bootstrap-3 grid with mobile grid
 *
 *    .grid-generator-mobile();
 *
 *  20-column grid with 20px gutter and mobile grid (less 480px)
 *
 *    .grid-generator-responsive(16, 20px, 'grid', 'grid');
 *
 */
@mixin grid-generator-mobile($cols: 12, $gutter: 30px, $col-name: 'col', $row-name: 'row')
  // XX
  @include grid-generator($cols, $gutter, "#{$col-name}-xx", $row-name)

  // XS
  @include grid-generator($cols, $gutter, "#{$col-name}-xs", '', 480px)

  // SM
  @include grid-generator($cols, $gutter, "#{$col-name}-sm", '', 768px)

  // MD
  @include grid-generator($cols, $gutter, "#{$col-name}-md", '', 992px)

  // LG
  @include grid-generator($cols, $gutter, "#{$col-name}-lg", '', 1200px)

@include grid-generator(4, 20, 'cc', 'rr', 600)